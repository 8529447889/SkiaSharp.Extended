{
  "homepages": [],
  "source_base_path": "/github/workspace/docs",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Resource",
      "output": {
        "resource": {
          "relative_path": "index.json"
        }
      },
      "is_incremental": false
    },
    {
      "log_codes": [
        "InvalidFileLink"
      ],
      "type": "Conceptual",
      "source_relative_path": "api/deprecated.md",
      "output": {
        ".html": {
          "relative_path": "api/deprecated.html",
          "hash": "l6vNcWvemDgLdtMwXnlw5A=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "log_codes": [
        "InvalidFileLink"
      ],
      "type": "Conceptual",
      "source_relative_path": "api/extended/index.md",
      "output": {
        ".html": {
          "relative_path": "api/extended/index.html",
          "hash": "pKfMiCR/cVbVt0uGvchMng=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "api/extended/skblurhash.md",
      "output": {
        ".html": {
          "relative_path": "api/extended/skblurhash.html",
          "hash": "OdZbPGqwW7YA783dao1yKg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "api/extended/skgeometry.md",
      "output": {
        ".html": {
          "relative_path": "api/extended/skgeometry.html",
          "hash": "Db5fnv6LiNdYp+dVD/5XqQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "api/extended/skpathinterpolation.md",
      "output": {
        ".html": {
          "relative_path": "api/extended/skpathinterpolation.html",
          "hash": "PndNHuRHNAb1ZGMMpDOjyQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "api/iconify/iconify.md",
      "output": {
        ".html": {
          "relative_path": "api/iconify/iconify.html",
          "hash": "n+myxKb0AjHIwuzHBPA1EQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "log_codes": [
        "InvalidFileLink"
      ],
      "type": "Conceptual",
      "source_relative_path": "api/iconify/index.md",
      "output": {
        ".html": {
          "relative_path": "api/iconify/index.html",
          "hash": "rPbNmlpXq5c8s3Ho9cz9AQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "log_codes": [
        "InvalidFileLink"
      ],
      "type": "Conceptual",
      "source_relative_path": "api/index.md",
      "output": {
        ".html": {
          "relative_path": "api/index.html",
          "hash": "tQA3YJEoQrozf0X0UzhJGw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "log_codes": [
        "InvalidFileLink"
      ],
      "type": "Conceptual",
      "source_relative_path": "api/svg/index.md",
      "output": {
        ".html": {
          "relative_path": "api/svg/index.html",
          "hash": "Lz9kq0hO+2gshtiG/u/JVQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "api/svg/svg.md",
      "output": {
        ".html": {
          "relative_path": "api/svg/svg.html",
          "hash": "cPjaTT7Yq0h7WLBH2ZZsZw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/toc.html",
          "hash": "pSOcRiu94ukGml8LLA9xrg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "log_codes": [
        "InvalidFileLink"
      ],
      "type": "Conceptual",
      "source_relative_path": "api/ui/index.md",
      "output": {
        ".html": {
          "relative_path": "api/ui/index.html",
          "hash": "QvUU7KCcgufNvGN+xhPjyw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "api/ui/skconfettiview.md",
      "output": {
        ".html": {
          "relative_path": "api/ui/skconfettiview.html",
          "hash": "9ABzgqVuGTYgCkUF+Mh3YQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "api/ui/skimagesourceextensions.md",
      "output": {
        ".html": {
          "relative_path": "api/ui/skimagesourceextensions.html",
          "hash": "o5Ei8v1E6ezd1firV+JLIg=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/extended/skblurhash/blur-small.png",
      "output": {
        "resource": {
          "relative_path": "images/extended/skblurhash/blur-small.png"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/extended/skblurhash/blur.png",
      "output": {
        "resource": {
          "relative_path": "images/extended/skblurhash/blur.png"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/extended/skblurhash/images.json",
      "output": {
        "resource": {
          "relative_path": "images/extended/skblurhash/images.json"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/extended/skblurhash/logo.png",
      "output": {
        "resource": {
          "relative_path": "images/extended/skblurhash/logo.png"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/extended/skpathinterpolation/interpolation.gif",
      "output": {
        "resource": {
          "relative_path": "images/extended/skpathinterpolation/interpolation.gif"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/iconify/fontawesome.png",
      "output": {
        "resource": {
          "relative_path": "images/iconify/fontawesome.png"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/logo.ico",
      "output": {
        "resource": {
          "relative_path": "images/logo.ico"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/logo.png",
      "output": {
        "resource": {
          "relative_path": "images/logo.png"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/ui/controls/skconfettiview/center-burst.gif",
      "output": {
        "resource": {
          "relative_path": "images/ui/controls/skconfettiview/center-burst.gif"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/ui/controls/skconfettiview/sides-spray.gif",
      "output": {
        "resource": {
          "relative_path": "images/ui/controls/skconfettiview/sides-spray.gif"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/ui/controls/skconfettiview/top-stream.gif",
      "output": {
        "resource": {
          "relative_path": "images/ui/controls/skconfettiview/top-stream.gif"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "log_codes": [
        "InvalidFileLink"
      ],
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html",
          "hash": "c3x8aThI7YLbTMOgQWsShQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html",
          "hash": "uQNyvwd4Wcm2/G8eCxrfpQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    }
  ],
  "incremental_info": [
    {
      "status": {
        "can_incremental": false,
        "details": "Cannot build incrementally because last build info is missing.",
        "incrementalPhase": "build",
        "total_file_count": 0,
        "skipped_file_count": 0,
        "full_build_reason_code": "NoAvailableBuildCache"
      },
      "processors": {
        "ResourceDocumentProcessor": {
          "can_incremental": false,
          "details": "Processor ResourceDocumentProcessor cannot support incremental build because the processor doesn't implement ISupportIncrementalDocumentProcessor interface.",
          "incrementalPhase": "build",
          "total_file_count": 0,
          "skipped_file_count": 0
        },
        "ConceptualDocumentProcessor": {
          "can_incremental": false,
          "incrementalPhase": "build",
          "total_file_count": 14,
          "skipped_file_count": 0
        },
        "TocDocumentProcessor": {
          "can_incremental": false,
          "details": "Processor TocDocumentProcessor cannot support incremental build because the processor doesn't implement ISupportIncrementalDocumentProcessor interface.",
          "incrementalPhase": "build",
          "total_file_count": 0,
          "skipped_file_count": 0
        }
      }
    },
    {
      "status": {
        "can_incremental": false,
        "details": "Cannot support incremental post processing, the reason is: should not trace intermediate info.",
        "incrementalPhase": "postProcessing",
        "total_file_count": 0,
        "skipped_file_count": 0
      },
      "processors": {}
    }
  ],
  "version_info": {},
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}